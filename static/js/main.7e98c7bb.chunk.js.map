{"version":3,"sources":["App.js","reportWebVitals.js","components/Python.js","index.js"],"names":["DEFAULT_QUERY","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","url","console","log","App","state","lists","searchKey","searchItem","isLoading","removeItem","bind","searchValue","fetchTopStories","onSubmit","setTopStories","result","this","hits","page","oldhits","updatedHits","setState","searchTerm","fetch","then","response","json","catch","e","event","checkTopStoriesSearchTerm","preventDefault","id","updated_list","filter","itemid","objectID","target","value","className","ssr","onClick","Component","Search","type","onChange","Loading","Table","sortKey","isSortReverse","onSort","props","sortedList","reverseSortedList","map","item","href","title","author","num_comments","points","Sort","children","Buttons","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Python","Root","to","basename","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e98c7bb.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { sortBy } from \"lodash\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport \"./style.css\"\n\nconst DEFAULT_QUERY = \"react\";\nconst PATH_BASE = \"https://hn.algolia.com/api/v1\";\nconst PATH_SEARCH = \"/search\";\nconst PARAM_SEARCH = \"query=\";\nconst DEFAULT_PAGE = 0;\nconst PARAM_PAGE = \"page=\";\n\nconst DEFAULT_HPP = 100;\nconst PARAM_HPP = \"hitsPerPage=\";\n\nconst SORTS = {\n  NONE: (list) => list,\n  TITLE: (list) => sortBy(list, \"title\"),\n  AUTHOR: (list) => sortBy(list, \"author\"),\n  COMMENTS: (list) => sortBy(list, \"num_comments\").reverse(),\n  POINTS: (list) => sortBy(list, \"points\").reverse(),\n};\n\nconst url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}&${PARAM_PAGE}`;\n\n// const url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}`\nconsole.log(url);\n\nfunction isSearched(searchTerm) {\n  return function (item) {\n    return !searchTerm || item.title.toLowerCase().includes(searchTerm);\n  };\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lists: null,\n      searchKey: \"\",\n      searchItem: DEFAULT_QUERY,\n      isLoading: false,\n    };\n    this.removeItem = this.removeItem.bind(this);\n    this.searchValue = this.searchValue.bind(this);\n    this.fetchTopStories = this.fetchTopStories.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.setTopStories = this.setTopStories.bind(this);\n  }\n\n  setTopStories(result) {\n    const { lists, searchKey } = this.state;\n    // // get the hits and page from result\n    // const { hits, page } = result;\n    // // meaning page in not 0, button has been clicked, page might be 1 or 2\n    // // old hits are already available in the state\n    // // const oldhits = page !== 0 ? this.state.list.hits : [];\n\n    // const oldhits = lists &&lists[searchKey] ? lists[searchKey].hits : [];\n\n    // const updatedHits = [...oldhits, ...hits];\n    // this.setState({ list: { hits: updatedHits } });\n\n    const { hits, page } = result;\n    // meaning page in not 0, button has been clicked, page might be 1 or 2\n    // old hits are already available in the state\n\n    const oldhits = lists && lists[searchKey] ? lists[searchKey].hits : [];\n\n    const updatedHits = [...oldhits, ...hits];\n    this.setState({\n      lists: { ...lists, [searchKey]: { hits: updatedHits, page } },\n      isLoading: false,\n    });\n  }\n\n  checkTopStoriesSearchTerm(searchTerm) {\n    return !this.state.lists[searchTerm];\n  }\n\n  fetchTopStories(searchTerm, page) {\n    this.setState({ isLoading: true });\n    fetch(\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP} `\n    )\n      .then((response) => response.json())\n      .then((result) => this.setTopStories(result))\n      .catch((e) => e);\n  }\n\n  componentDidMount() {\n    this.setState({ searchKey: this.state.searchItem });\n    this.fetchTopStories(this.state.searchItem, DEFAULT_PAGE);\n  }\n  onSubmit(event) {\n    this.setState({ searchKey: this.state.searchItem });\n    if (this.checkTopStoriesSearchTerm(this.state.searchItem)) {\n      this.fetchTopStories(this.state.searchItem, DEFAULT_PAGE);\n    }\n\n    // this.fetchTopStories(this.state.searchItem);\n    event.preventDefault();\n  }\n\n  removeItem(id) {\n    function isNotId(itemid) {\n      return itemid.objectID !== id;\n    }\n\n    const {hits, page} = this.state.lists[this.state.searchKey];\n\n    // create a new updated list\n    const updated_list = hits.filter(isNotId);\n    // assign the new updated list to the list using setstate method\n    // this.setState({\n    //   lists: Object.assign(this.state.list, { hits: updated_list }),\n    // });\n    this.setState({lists: {...this.state.lists, [this.state.searchKey] : {hits : updated_list, page } }})\n  }\n\n  searchValue(event) {\n    this.setState({ searchItem: event.target.value });\n  }\n  // higher order function\n  // a function which is defined outside the class and also it return a function\n\n  render() {\n    if (!this.state.lists) {\n      return null;\n    }\n    // const page = (this.state.list && this.state.list.page) || 0;\n    const page =\n      (this.state.lists &&\n        this.state.lists[this.state.searchKey] &&\n        this.state.lists[this.state.searchKey].page) ||\n      0;\n    const list =\n      (this.state.lists &&\n        this.state.lists[this.state.searchKey] &&\n        this.state.lists[this.state.searchKey].hits) ||\n      [];\n    return (\n      <div className=\"App\">\n        <Search ssr={this.searchValue} onSubmit={this.onSubmit} />\n\n        <Table\n          list={list}\n          removeItem={this.removeItem}\n          searchItem={this.state.searchItem}\n        />\n        {this.state.isLoading ? (\n          <Loading />\n        ) : (\n          <button\n            onClick={() =>\n              this.fetchTopStories(this.state.searchItem, page + 1)\n            }\n          >\n            Load More\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\n// stateless function\n\nconst Search = ({ ssr, onSubmit }) => (\n  <div className=\"header\">\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" onChange={ssr} />\n      <button type=\"submit\" className=\"btnsearch\">Search</button>\n    </form>\n  </div>\n);\n\nconst Loading = () => <div>Loading...</div>;\n\nclass Table extends Component {\n  constructor() {\n    super();\n    this.state = {\n      sortKey: \"NONE\",\n      isSortReverse: false,\n    };\n    this.onSort = this.onSort.bind(this);\n  }\n\n  onSort(sortKey) {\n    const isSortReverse =\n      this.state.sortKey === sortKey && !this.state.isSortReverse;\n    this.setState({ sortKey, isSortReverse });\n\n    // this.setState({ sortKey });\n  }\n  // we create two constant before the return {sorted list is whatever currently is} and\n  //second is  {reverseSortedList to shift the reverse mode on and off) and also change the mapping\n\n  render() {\n    const { list, searchItem, removeItem } = this.props;\n    const { sortKey, isSortReverse } = this.state;\n    const sortedList = SORTS[sortKey](list);\n    const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\n\n    return (\n      <div>\n        <div>\n          <Sort sortKey={\"TITLE\"} onSort={this.onSort}>\n            Title\n          </Sort>\n          <Sort sortKey={\"AUTHOR\"} onSort={this.onSort}>\n            Author\n          </Sort>\n          <Sort sortKey={\"COMMENTS\"} onSort={this.onSort}>\n            Comments\n          </Sort>\n          <Sort sortKey={\"POINTS\"} onSort={this.onSort}>\n            Points\n          </Sort>\n        </div>\n\n        {\n          // list.filter(isSearched(searchItem)).map((item) => (\n          // SORTS[sortKey](list).map((item) => (\n          reverseSortedList.map((item) => (\n            <div key={item.objectID}>\n              <h1>\n                <a href={item.url}> {item.title}</a> by {item.author}\n              </h1>\n              <h5>\n                {item.num_comments} comments | {item.points} points\n              </h5>\n              <Buttons onClick={() => removeItem(item.objectID)} />\n              {/* <button type=\"button\" onClick={() => removeItem(item.object_id)}>\n            Remove Item\n          </button> */}\n            </div>\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nconst Sort = ({ sortKey, onSort, children }) => (\n  <button onClick={() => onSort(sortKey)}>{children}</button>\n);\n\nclass Buttons extends Component {\n  render() {\n    return (\n      <button type=\"button\" onClick={this.props.onClick}>\n        Remove Item\n      </button>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Component } from \"react\";\r\nimport { sortBy } from \"lodash\";\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../style.css\";\r\n\r\nconst DEFAULT_QUERY = \"react\";\r\nconst PATH_BASE = \"https://hn.algolia.com/api/v1\";\r\nconst PATH_SEARCH = \"/search\";\r\nconst PARAM_SEARCH = \"query=\";\r\nconst DEFAULT_PAGE = 0;\r\nconst PARAM_PAGE = \"page=\";\r\n\r\nconst DEFAULT_HPP = 100;\r\nconst PARAM_HPP = \"hitsPerPage=\";\r\n\r\nconst SORTS = {\r\n  NONE: (list) => list,\r\n  TITLE: (list) => sortBy(list, \"title\"),\r\n  AUTHOR: (list) => sortBy(list, \"author\"),\r\n  COMMENTS: (list) => sortBy(list, \"num_comments\").reverse(),\r\n  POINTS: (list) => sortBy(list, \"points\").reverse(),\r\n};\r\n\r\nconst url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}&${PARAM_PAGE}`;\r\n\r\n// const url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}`\r\nconsole.log(url);\r\n\r\nfunction isSearched(searchTerm) {\r\n  return function (item) {\r\n    return !searchTerm || item.title.toLowerCase().includes(searchTerm);\r\n  };\r\n}\r\n\r\nclass Python extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      lists: null,\r\n      searchKey: \"\",\r\n      searchItem: \"python\",\r\n      isLoading: false,\r\n    };\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n  }\r\n\r\n  setTopStories(result) {\r\n    const { lists, searchKey } = this.state;\r\n    // // get the hits and page from result\r\n    // const { hits, page } = result;\r\n    // // meaning page in not 0, button has been clicked, page might be 1 or 2\r\n    // // old hits are already available in the state\r\n    // // const oldhits = page !== 0 ? this.state.list.hits : [];\r\n\r\n    // const oldhits = lists &&lists[searchKey] ? lists[searchKey].hits : [];\r\n\r\n    // const updatedHits = [...oldhits, ...hits];\r\n    // this.setState({ list: { hits: updatedHits } });\r\n\r\n    const { hits, page } = result;\r\n    // meaning page in not 0, button has been clicked, page might be 1 or 2\r\n    // old hits are already available in the state\r\n\r\n    const oldhits = lists && lists[searchKey] ? lists[searchKey].hits : [];\r\n\r\n    const updatedHits = [...oldhits, ...hits];\r\n    this.setState({\r\n      lists: { ...lists, [searchKey]: { hits: updatedHits, page } },\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.lists[searchTerm];\r\n  }\r\n\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({ isLoading: true });\r\n    fetch(\r\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP} `\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => this.setTopStories(result))\r\n      .catch((e) => e);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ searchKey: this.state.searchItem });\r\n    this.fetchTopStories(this.state.searchItem, DEFAULT_PAGE);\r\n  }\r\n  onSubmit(event) {\r\n    this.setState({ searchKey: this.state.searchItem });\r\n    if (this.checkTopStoriesSearchTerm(this.state.searchItem)) {\r\n      this.fetchTopStories(this.state.searchItem, DEFAULT_PAGE);\r\n    }\r\n\r\n    // this.fetchTopStories(this.state.searchItem);\r\n    event.preventDefault();\r\n  }\r\n\r\n  removeItem(id) {\r\n    function isNotId(itemid) {\r\n      return itemid.objectID !== id;\r\n    }\r\n\r\n    const { hits, page } = this.state.lists[this.state.searchKey];\r\n\r\n    // create a new updated list\r\n    const updated_list = hits.filter(isNotId);\r\n    // assign the new updated list to the list using setstate method\r\n    // this.setState({\r\n    //   lists: Object.assign(this.state.list, { hits: updated_list }),\r\n    // });\r\n    this.setState({\r\n      lists: {\r\n        ...this.state.lists,\r\n        [this.state.searchKey]: { hits: updated_list, page },\r\n      },\r\n    });\r\n  }\r\n\r\n  searchValue(event) {\r\n    this.setState({ searchItem: event.target.value });\r\n  }\r\n  // higher order function\r\n  // a function which is defined outside the class and also it return a function\r\n\r\n  render() {\r\n    if (!this.state.lists) {\r\n      return null;\r\n    }\r\n    // const page = (this.state.list && this.state.list.page) || 0;\r\n    const page =\r\n      (this.state.lists &&\r\n        this.state.lists[this.state.searchKey] &&\r\n        this.state.lists[this.state.searchKey].page) ||\r\n      0;\r\n    const list =\r\n      (this.state.lists &&\r\n        this.state.lists[this.state.searchKey] &&\r\n        this.state.lists[this.state.searchKey].hits) ||\r\n      [];\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <Search ssr={this.searchValue} onSubmit={this.onSubmit} /> */}\r\n\r\n        <Table\r\n          list={list}\r\n          removeItem={this.removeItem}\r\n          searchItem={this.state.searchItem}\r\n        />\r\n        {this.state.isLoading ? (\r\n          <Loading />\r\n        ) : (\r\n          <button\r\n            onClick={() =>\r\n              this.fetchTopStories(this.state.searchItem, page + 1)\r\n            }\r\n          >\r\n            Load More\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// stateless function\r\n\r\nconst Loading = () => <div>Loading...</div>;\r\n\r\nclass Table extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      sortKey: \"NONE\",\r\n      isSortReverse: false,\r\n    };\r\n    this.onSort = this.onSort.bind(this);\r\n  }\r\n\r\n  onSort(sortKey) {\r\n    const isSortReverse =\r\n      this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({ sortKey, isSortReverse });\r\n\r\n    // this.setState({ sortKey });\r\n  }\r\n  // we create two constant before the return {sorted list is whatever currently is} and\r\n  //second is  {reverseSortedList to shift the reverse mode on and off) and also change the mapping\r\n\r\n  render() {\r\n    const { list, searchItem, removeItem } = this.props;\r\n    const { sortKey, isSortReverse } = this.state;\r\n    const sortedList = SORTS[sortKey](list);\r\n    const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Sort sortKey={\"TITLE\"} onSort={this.onSort}>\r\n            Title\r\n          </Sort>\r\n          <Sort sortKey={\"AUTHOR\"} onSort={this.onSort}>\r\n            Author\r\n          </Sort>\r\n          <Sort sortKey={\"COMMENTS\"} onSort={this.onSort}>\r\n            Comments\r\n          </Sort>\r\n          <Sort sortKey={\"POINTS\"} onSort={this.onSort}>\r\n            Points\r\n          </Sort>\r\n        </div>\r\n\r\n        {\r\n          // list.filter(isSearched(searchItem)).map((item) => (\r\n          // SORTS[sortKey](list).map((item) => (\r\n          reverseSortedList.map((item) => (\r\n            <div key={item.objectID}>\r\n              <h1>\r\n                <a href={item.url}> {item.title}</a> by {item.author}\r\n              </h1>\r\n              <h5>\r\n                {item.num_comments} comments | {item.points} points\r\n              </h5>\r\n              <Buttons onClick={() => removeItem(item.objectID)} />\r\n              {/* <button type=\"button\" onClick={() => removeItem(item.object_id)}>\r\n            Remove Item\r\n          </button> */}\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Sort = ({ sortKey, onSort, children }) => (\r\n  <button onClick={() => onSort(sortKey)}>{children}</button>\r\n);\r\n\r\nclass Buttons extends Component {\r\n  render() {\r\n    return (\r\n      <button type=\"button\" onClick={this.props.onClick}>\r\n        Remove Item\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Python;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Python from \"./components/Python\";\nimport Javascript from \"./components/Javascript\";\n\nimport { BrowserRouter, Route, Routes, Link } from \"react-router-dom\";\n\nconst Root = () => (\n  <BrowserRouter>\n    <div>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/python\">Python</Link>\n      <Link to=\"/javascript\">Javascript</Link>\n    </div>\n    <Routes basename=\"/arifhussain1987/\">\n      <Route exact path=\"/\" element={<App />} />\n      <Route exact path=\"/python\" element={<Python />} />\n      <Route exact path=\"/javascript\" element={<Javascript />} />\n    </Routes>\n  </BrowserRouter>\n);\n\n// const About = () => (\n//   <div>\n//     <h2>About Us page...</h2>\n//   </div>\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}